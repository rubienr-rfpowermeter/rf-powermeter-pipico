name: CMake Build
on:
  push:
    branches:
    paths:
      - "**"
      - "!**.md"
      - "!**license"
      - "!**.gitignore"
      - "!**.clang-format"
      - "!.github/workflows/**.yaml"
      - ".github/workflows/cmake.yaml"
  pull_request:
    paths:
      - "**"
      - "!**.md"
      - "!**license"
      - "!**.gitignore"
      - "!**.clang-format"
      - "!.github/workflows/**.yaml"
      - ".github/workflows/cmake.yml.yaml"

env:
  BUILD_TYPE: Release
  PICO_SDK_PATH: ${{github.workspace}}/pico-sdk

jobs:
  cmake-build:
    name: CMake Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    
    steps:
      - name: "pico-sdk: cache"
        uses: actions/cache@v3
        with:
          path: ${{env.PICO_SDK_PATH}}
          key: ${{ runner.os }}-picosdk-${{ hashFiles('${{github.workspace}}/pico-sdk/**') }}
          restore-keys: |
            ${{ runner.os }}-picosdk-

      - name: pico-sdk-checkout
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: 2.0.0
          path: ${{env.PICO_SDK_PATH}}

      - name: "submodule: checkout"
        working-directory: ${{github.workspace}}/pico-sdk
        run: |
          src/scripts/git-submodule-init.sh
          git submodule status

      - name: "repository: checkout"
        uses: actions/checkout@v3

      - name: "repository: checkout submodule"
        run: src/scripts/git-submodule-init.sh

      - name: "build prerequisites"
        run: src/scripts/install-prerequisites-ubuntu.sh

      - name: "build: create build env + CMake"
        run: src/scripts/cmake.sh

      - name: "build: make"
        run: src/scripts/cmake.sh

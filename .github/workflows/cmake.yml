name: CMake Build
on:
  push:
    branches:
    paths:
      - "**"
      - "!**.md"
      - "!**license"
      - "!**.gitignore"
      - "!**.clang-format"
      - "!.github/workflows/**.yaml"
      - ".github/workflows/cmake.yaml"
  pull_request:
    paths:
      - "**"
      - "!**.md"
      - "!**license"
      - "!**.gitignore"
      - "!**.clang-format"
      - "!.github/workflows/**.yaml"
      - ".github/workflows/cmake.yml.yaml"

env:
  BUILD_TYPE: Release
  PICO_SDK_PATH: ${{github.workspace}}/pico-sdk
  PICO_SDK_PATH_CACHE_KEY: ${{github.workspace}}/pico-sdk/**

jobs:
  cmake-build:
    name: CMake Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    
    steps:
      - name: "pico-sdk: cache restore"
        uses: actions/cache/restore@v4
        id: cache-picosdk-restore
        with:
          path: ${{env.PICO_SDK_PATH}}
          # key: ${{ runner.os }}-picosdk-${{ hashFiles(format('{0}/**', env.PICO_SDK_PATH)) }}
          key: ${{ runner.os }}-picosdk-${{ hashFiles('~/**/CMakeLists.txt') }}

      - name: "pico-sdk: checkout"
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: 2.0.0
          path: ${{env.PICO_SDK_PATH}}

      - name: "pico-sdk: cache save"
        id: cache-picosdk-save
        uses: actions/cache/save@v4
        with:
          path: ${{env.PICO_SDK_PATH}}
          key: ${{ steps.cache-picosdk-restore.outputs.cache-primary-key }}

      - name: "repository: checkout"
        uses: actions/checkout@v4

      - name: "repository: checkout submodule"
        run: src/scripts/git-submodule-init.sh

      - name: "build prerequisites"
        run: src/scripts/install-prerequisites-ubuntu.sh

      - name: "build: create build env + CMake"
        run: src/scripts/cmake.sh

      - name: "build: make"
        run: src/scripts/cmake.sh
